{# This file might seem a little complex, because of the high density of tags.
   It uses Twig macros and ternary selectors. Read up on them, if required:
   macros: http://twig.sensiolabs.org/doc/templates.html#macros
   ternary operators: http://twig.sensiolabs.org/doc/templates.html#other-operators
#}

{# Make sure the setting for the submenus is defined. #}
{% if withsubmenus is not defined %}
    {% set withsubmenus = true %}
{% endif %}

{% if position is not defined %}
  {% set position = 0 %}
{% endif %}

{# The 'recursive' macro, for inserting one menu item. If it has a submenu, it
   invokes itself to insert the items of the submenus. #}
{% macro display_menu_item(item, loop, extraclass, withsubmenus) %}
    {% from _self import display_menu_item %}
    {% spaceless %}
    <li class="index-{{ loop.index -}}
        {{ item.path|default('') == 'homepage' ? ' menu-text' -}}
        {{ loop.first ? ' first' -}}
        {{ loop.last ? ' last' -}}
        {{ (item.submenu|default(false) and withsubmenus) ? ' is-dropdown-submenu-parent' -}}
        {{ item|current ? ' active' }}">

        <a href="{{ item.link }}" title='{{ item.title|default('')|escape }}' class='{{ item.class|default('') }}'>
            {{- item.label|default('-') -}}
        </a>

        {% set list = [] %}
        {% if item.list|default(false) and withsubmenus %}
          {% setcontent listedcontent = item.list.contenttype where { showinmenu: true} %}
          {% for listitem in listedcontent %}
            {% set list = list|merge([{title: listitem.gettitle(), link: listitem.link, label: listitem.gettitle()|replace({'Feuerwehr ': ""})}]) %}
          {% endfor %}
          <ul class="menu submenu vertical" data-submenu>
            {% for submenu in list %}
              {{ display_menu_item(submenu, loop) }}
            {% endfor %}
          </ul>
        {% endif %}
        {% if item.submenu is defined and withsubmenus %}
            <ul class="menu submenu vertical" data-submenu>
                {% for submenu in item.submenu %}
                    {{ display_menu_item(submenu, loop) }}
                {% endfor %}
            </ul>
        {% endif %}
    </li>
    {% endspaceless %}
{% endmacro %}

{# Make the macro available for use #}
{% from _self import display_menu_item %}

{# The main menu loop: Iterates over the items, calling `display_menu_item` #}
<ul  class="menu vertical medium-horizontal {{ class|default('') }}" data-responsive-menu="accordion medium-dropdown">
{% for item in menu %}
    {% if (item.display_on_positions is not defined or position in item.display_on_positions) %}
      {% if item.label is defined %}
          {{ display_menu_item(item, loop, '', withsubmenus) }}
      {% endif %}
    {% endif %}
{% endfor %}
</ul>
